{"ast":null,"code":"import _classCallCheck from\"E:\\\\tictactoe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\tictactoe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\tictactoe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\tictactoe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _slicedToArray from\"E:\\\\tictactoe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import Board from'./Board';function calculateWinner(squares){var lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(var i=0;i<lines.length;i++){var _lines$i=_slicedToArray(lines[i],3),a=_lines$i[0],b=_lines$i[1],c=_lines$i[2];if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){return squares[a];}}return null;}var Game=/*#__PURE__*/function(_React$Component){_inherits(Game,_React$Component);var _super=_createSuper(Game);function Game(props){var _this;_classCallCheck(this,Game);_this=_super.call(this,props);_this.state={history:[{squares:Array(9).fill(null)}],stepNumber:0,xIsNext:true};return _this;}_createClass(Game,[{key:\"handleClick\",value:function handleClick(i){var history=this.state.history.slice(0,this.state.stepNumber+1);var current=history[history.length-1];var squares=current.squares.slice();if(calculateWinner(squares)||squares[i]){return;}squares[i]=this.state.xIsNext?\"X\":\"O\";this.setState({history:history.concat([{squares:squares}]),stepNumber:history.length,xIsNext:!this.state.xIsNext});}},{key:\"jumpTo\",value:function jumpTo(step){this.setState({stepNumber:step,xIsNext:step%2===0});}},{key:\"render\",value:function render(){var _this2=this;var history=this.state.history;var current=history[this.state.stepNumber];var winner=calculateWinner(current.squares);var moves=history.map(function(step,move){var desc=move?'Go to move #'+move:'Go to game start';return/*#__PURE__*/React.createElement(\"li\",{key:move},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.jumpTo(move);}},desc));});var status;if(winner){status=\"Winner: \"+winner;}else{status=\"Next player: \"+(this.state.xIsNext?\"X\":\"O\");}return/*#__PURE__*/React.createElement(\"div\",{className:\"game\"},/*#__PURE__*/React.createElement(\"div\",{className:\"game-board\"},/*#__PURE__*/React.createElement(Board,{squares:current.squares,onClick:function onClick(i){return _this2.handleClick(i);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"game-info\"},/*#__PURE__*/React.createElement(\"div\",null,status),/*#__PURE__*/React.createElement(\"ol\",null,moves)));}}]);return Game;}(React.Component);export{Game as default};","map":{"version":3,"sources":["E:/tictactoe/src/Game.js"],"names":["React","Board","calculateWinner","squares","lines","i","length","a","b","c","Game","props","state","history","Array","fill","stepNumber","xIsNext","slice","current","setState","concat","step","winner","moves","map","move","desc","jumpTo","status","handleClick","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Board from './Board';\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [\r\n          {\r\n            squares: Array(9).fill(null)\r\n          }\r\n        ],\r\n        stepNumber: 0,\r\n        xIsNext: true\r\n      };\r\n    }\r\n  \r\n    handleClick(i) {\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n      this.setState({\r\n        history: history.concat([\r\n          {\r\n            squares: squares\r\n          }\r\n        ]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext\r\n      });\r\n    }\r\n  \r\n    jumpTo(step) {\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n  \r\n      const moves = history.map((step, move) => {\r\n        const desc = move ?\r\n          'Go to move #' + move :\r\n          'Go to game start';\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      });\r\n  \r\n      let status;\r\n      if (winner) {\r\n        status = \"Winner: \" + winner;\r\n      } else {\r\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n      }\r\n  \r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n              squares={current.squares}\r\n              onClick={i => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}